# -*- coding: utf-8 -*-
import telebot
import params
import datetime
import Storage.storage as storage
import Masters.masters as masters

from telebot import types
from Keyboards.keyboards import Keyboard
from telebot_calendar import Calendar, CallbackData, RUSSIAN_LANGUAGE

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞
token = params.getToken()
bot = telebot.TeleBot(token)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
calendar = Calendar(language=RUSSIAN_LANGUAGE)
calendar_rec = CallbackData('calendar_rec', 'action', 'year', 'month', 'day')
now = datetime.datetime.now()


# –°—Ç–∞—Ä—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ
@bot.message_handler(commands=['start'])
def start_message(message):
    bot.send_message(message.chat.id, f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å ‚úåÔ∏è", reply_markup=Keyboard.default())


# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler()
def start(message):
    storage.init_storage(message.from_user.id)
    if message.text in ['–ó–∞–ø–∏—Å—å üìù', '–ó–∞–ø–∏—Å—å', '–∑–∞–ø–∏—Å—å']:
        making_user_record(message)
    elif message.text in ['–û —Å–∞–ª–æ–Ω–µ üó∫', '–û —Å–∞–ª–æ–Ω–µ', '–æ —Å–∞–ª–æ–Ω–µ']:
        send_information_about(message)
    elif message.text in ['–ú–∞—Å—Ç–µ—Ä–∞ üôé‚Äç‚ôÄÔ∏è', '–ú–∞—Å—Ç–µ—Ä–∞', '–º–∞—Å—Ç–µ—Ä–∞']:
        send_masters_list(message)
    else:
        bot.reply_to(message, "–ù–µ –∑–Ω–∞—é —á—Ç–æ –Ω–∞ —ç—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å:", reply_markup=Keyboard.default())


# –í—ã–≤–æ–¥ —Å–ø–∏—Å–∫–∞ –º–∞—Å—Ç–µ—Ä–æ–≤
def send_masters_list(message):
    list_masters = masters.get_masters_list()
    for key in list_masters.keys():
        caption = list_masters[key]['name']
        image = open(list_masters[key]['image'], 'rb')
        keyboard = types.InlineKeyboardMarkup()
        callback_button = types.InlineKeyboardButton(text="–ó–∞–ø–∏—Å–∞—Ç—å—Å—è", callback_data=key)
        keyboard.add(callback_button)
        bot.send_photo(message.chat.id, image, caption=caption, reply_markup=keyboard)


# –í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–∞–ª–æ–Ω–µ
def send_information_about(message):
    bot.send_message(message.chat.id, "üôã‚Äç‚ôÄÔ∏è<b>–ü—Ä–∏–≤–µ—Ç! –ú–µ–Ω—è –∑–æ–≤—É—Ç –§–∞–º–∏–ª–∏—è –ò–º—è –û—Ç—á–µ—Å—Ç–≤–æ!</b>\n –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–∏–¥–∞ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏\n –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —É—Å–ª—É–≥ –∏ —Ç.–¥.\n\n <a href='https://yandex.ru/maps/-/CCUVIMELcD'>üó∫ –í–æ—Ä–æ–Ω–µ–∂, —É–ª.–ü—É—à–∫–∏–Ω–∞, –¥.40</a>" ,parse_mode='HTML', reply_markup=Keyboard.default())
    

# –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –Ω–∞ —É—Å–ª—É–≥—É
def making_user_record(message):
    bot.send_message(message.chat.id, "‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:", reply_markup=Keyboard.delete())
    bot.register_next_step_handler(message, plus_name)


# –®–∞–≥ 1 - –∑–∞–ø–∏—Å—å –∏–º–µ–Ω–∏
def plus_name(message):
    storage.set_storage_data(message.from_user.id, "user_nickname", message.from_user.username)
    storage.set_storage_data(message.from_user.id, "user_name", message.text)
    bot.reply_to(message, "–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è! –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–ª–∏–∞–ª:", reply_markup=Keyboard.address())
    bot.register_next_step_handler(message, plus_address)


# –®–∞–≥ 2 - –∑–∞–ø–∏—Å—å —Ñ–∏–ª–∏–∞–ª–∞
def plus_address(message):
    storage.set_storage_data(message.from_user.id, "user_address", message.text)
    user_master_key = storage.get_storage_data(message.from_user.id, "user_master_key")
    bot.reply_to(message, "‚úîÔ∏è –°—É–ø–µ—Ä! –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É:", reply_markup=Keyboard.service(user_master_key))
    bot.register_next_step_handler(message, plus_service)


# –®–∞–≥ 3 - –∑–∞–ø–∏—Å—å —É—Å–ª—É–≥–∏
def plus_service(message):
    storage.set_storage_data(message.from_user.id, "user_service", message.text)
    bot.send_message(message.chat.id, "üóì –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã:", reply_markup=calendar.create_calendar(name=calendar_rec.prefix, year=now.year, month=now.month))
    plus_date(message)


# –®–∞–≥ 4 - –≤—ã–±–æ—Ä –¥–∞—Ç—ã
def plus_date(message):
    user_date = storage.get_storage_data(message.from_user.id, "user_date")
    if user_date == storage.EMPTY_VALUE:
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –∏–∑ –º–µ–Ω—é –≤—ã—à–µ", reply_markup=Keyboard.delete())
        bot.register_next_step_handler(message, plus_date)
        return
    elif message.text in ['–û—Ç–º–µ–Ω–∞', '–æ—Ç–º–µ–Ω–∞']:
        delete_user_record(message.from_user.id)
    else:
        plus_time(message)

    
# –®–∞–≥ 4.1 - –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
@bot.callback_query_handler(func=lambda call: call.data.startswith(calendar_rec.prefix))
def callback_inline(call: types.CallbackQuery):
    chat_id = call.from_user.id
    name, action, year, month, day = call.data.split(calendar_rec.sep)
    date = calendar.calendar_query_handler(bot=bot, call=call, name=name, action=action, year=year, month=month, day=day)
    
    if action == 'DAY':
        storage.set_storage_data(chat_id, "user_date", date.strftime("%d.%m.%Y"))
        bot.send_message(chat_id, text=f'–í—ã –≤—ã–±—Ä–∞–ª–∏ {date.strftime("%d.%m.%Y")}. –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è:', reply_markup=Keyboard.times())
    elif action == 'CANCEL':
        delete_user_record(chat_id)


# –®–∞–≥ 5 - –≤—ã–±–æ—Ä –≤—Ä–µ–º–µ–Ω–∏, –∑–∞–ø–∏—Å—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
def plus_time(message):
    storage.set_storage_data(message.from_user.id, "user_time", message.text)
    bot.send_message(message.from_user.id, text="–ö–∞–∫ –º—ã –º–æ–∂–µ–º —Å –≤–∞–º–∏ —Å–≤—è–∑–∞—Ç—å—Å—è? ü§î\n–ú–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω –∏–ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:", reply_markup=Keyboard.delete())
    bot.register_next_step_handler(message, make_result)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ callback_inline
@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    list_masters = masters.get_masters_list()
    callback_data = call.data
    message = call.message
    
    if callback_data in list_masters:
        storage.set_storage_data(message.chat.id, "user_master", list_masters[callback_data]['name'])
        storage.set_storage_data(message.chat.id, "user_master_key", callback_data)
        making_user_record(message)


# –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø–∏—Å–∏ –Ω–∞ —É—Å–ª—É–≥—É
def make_result(message):
    storage.set_storage_data(message.from_user.id, "user_comment", message.text)
    bot.reply_to(message, "–ó–∞–ø–∏—Å—å –∑–∞–≤–µ—Ä—à–µ–Ω–∞", reply_markup=Keyboard.default())
    
    user_name = storage.get_storage_data(message.from_user.id, "user_name")
    user_master = storage.get_storage_data(message.from_user.id, "user_master")
    user_address = storage.get_storage_data(message.from_user.id, "user_address")
    user_service = storage.get_storage_data(message.from_user.id, "user_service")
    user_date = storage.get_storage_data(message.from_user.id, "user_date")
    user_time = storage.get_storage_data(message.from_user.id, "user_time")
    user_nickname = storage.get_storage_data(message.from_user.id, "user_nickname")
    user_comment = storage.get_storage_data(message.from_user.id, "user_comment")

    text = (
    f"""
    –ë–æ–ª—å—à–æ–µ —Å–ø–∞—Å–∏–±–æ! üëç
    –í–∞—à–µ –∏–º—è: {user_name}
    –ú–∞—Å—Ç–µ—Ä: {user_master}
    –ê–¥—Ä–µ—Å: {user_address}
    –£—Å–ª—É–≥–∞: {user_service}
    –î–∞—Ç–∞: {user_date}
    –í—Ä–µ–º—è: {user_time}
    –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {user_comment}
    –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{user_nickname}
    """
    )
    
    bot.send_message(message.chat.id, text)

# –û—Ç–º–µ–Ω–∞ –∑–∞–ø–∏—Å–∏
def delete_user_record(chat_id):
    storage.init_storage(chat_id)
    bot.send_message(chat_id, "–ó–∞–ø–∏—Å—å –æ—Ç–º–µ–Ω–µ–Ω–∞", reply_markup=Keyboard.default())


# –ö–æ–Ω–µ—Ü —Å–∫—Ä–∏–ø—Ç–∞
if __name__ == '__main__':
    bot.skip_pending = True
    bot.polling(none_stop=True)
    bot.infinity_polling()