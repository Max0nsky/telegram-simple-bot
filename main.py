# -*- coding: utf-8 -*-
import telebot
import params
import storage
import datetime

from telebot import types
from keyboards import Keyboard
from telebot_calendar import Calendar, CallbackData, RUSSIAN_LANGUAGE

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞
token = params.getToken()
bot = telebot.TeleBot(token)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
calendar = Calendar(language=RUSSIAN_LANGUAGE)
calendar_1 = CallbackData('calendar_1', 'action', 'year', 'month', 'day')
now = datetime.datetime.now()


# –°—Ç–∞—Ä—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ
@bot.message_handler(commands=['start'])
def start_message(message):
    bot.send_message(message.chat.id, f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å ‚úåÔ∏è", reply_markup=Keyboard.v1())


# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler()
def start(message):
    storage.init_storage(message.from_user.id)
    if message.text in ['–ó–∞–ø–∏—Å—å üìù', '–ó–∞–ø–∏—Å—å', '–∑–∞–ø–∏—Å—å']:
        making_user_record(message)
    else:
        bot.send_message(message.chat.id, "–ù–µ –∑–Ω–∞—é —á—Ç–æ –Ω–∞ —ç—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å", reply_markup=Keyboard.v1())


# –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –Ω–∞ —É—Å–ª—É–≥—É
def making_user_record(message):
    storage.set_storage_data(message.from_user.id, "user_nickname", message.from_user.username)
    bot.send_message(message.chat.id, "‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:", reply_markup=Keyboard.delete())
    bot.register_next_step_handler(message, plus_name)


# –®–∞–≥ 1 - –∑–∞–ø–∏—Å—å –∏–º–µ–Ω–∏
def plus_name(message):
    storage.set_storage_data(message.from_user.id, "user_name", message.text)
    bot.reply_to(message, "–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è! –í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É:", reply_markup=Keyboard.v2())
    bot.register_next_step_handler(message, plus_service)


# –®–∞–≥ 2 - –∑–∞–ø–∏—Å—å —É—Å–ª—É–≥–∏
def plus_service(message):
    storage.set_storage_data(message.from_user.id, "user_service", message.text)
    bot.send_message(message.chat.id, "üóì –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å:", reply_markup=calendar.create_calendar(name=calendar_1.prefix, year=now.year, month=now.month))
    plus_date(message)


# –®–∞–≥ 3 - –≤—ã–±–æ—Ä –¥–∞—Ç—ã
def plus_date(message):
    user_date = storage.get_storage_data(message.from_user.id, "user_date")
    if user_date == '–ù–µ –≤—ã–±—Ä–∞–Ω–æ':
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –∏–∑ –º–µ–Ω—é –≤—ã—à–µ", reply_markup=Keyboard.delete())
        bot.register_next_step_handler(message, plus_date)
        return
    elif message.text in ['–û—Ç–º–µ–Ω–∞', '–æ—Ç–º–µ–Ω–∞']:
        delete_user_record(message.from_user.id)
    else:
        make_result(message)


# –®–∞–≥ 4 - –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—è 
@bot.callback_query_handler(func=lambda call: call.data.startswith(calendar_1.prefix))
def callback_inline(call: types.CallbackQuery):
    chat_id = call.from_user.id
    name, action, year, month, day = call.data.split(calendar_1.sep)
    date = calendar.calendar_query_handler(bot=bot, call=call, name=name, action=action, year=year, month=month, day=day)
    
    if action == 'DAY':
        storage.set_storage_data(chat_id, "user_date", date.strftime("%d.%m.%Y"))
        bot.send_message(chat_id, text=f'–í—ã –≤—ã–±—Ä–∞–ª–∏ {date.strftime("%d.%m.%Y")} \n–ï—Å—Ç—å –ª–∏ —É –í–∞—Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è? ü§î', reply_markup=Keyboard.delete())
    elif action == 'CANCEL':
        delete_user_record(chat_id)
        

# –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø–∏—Å–∏ –Ω–∞ —É—Å–ª—É–≥—É
def make_result(message):
    storage.set_storage_data(message.from_user.id, "user_comment", message.text)
    bot.reply_to(message, "–ó–∞–ø–∏—Å—å –∑–∞–≤–µ—Ä—à–µ–Ω–∞", reply_markup=Keyboard.v1())
    
    user_name = storage.get_storage_data(message.from_user.id, "user_name")
    user_service = storage.get_storage_data(message.from_user.id, "user_service")
    user_date = storage.get_storage_data(message.from_user.id, "user_date")
    user_nickname = storage.get_storage_data(message.from_user.id, "user_nickname")
    user_comment = storage.get_storage_data(message.from_user.id, "user_comment")

    text = f"–ë–æ–ª—å—à–æ–µ —Å–ø–∞—Å–∏–±–æ! üëç \n–í–∞—à–µ –∏–º—è: {user_name} \n–£—Å–ª—É–≥–∞: {user_service} \n–î–∞—Ç–∞: {user_date} \n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {user_comment} \n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{user_nickname}"
    bot.send_message(message.chat.id, text)


# –û—Ç–º–µ–Ω–∞ –∑–∞–ø–∏—Å–∏
def delete_user_record(chat_id):
    bot.send_message(chat_id, "–ó–∞–ø–∏—Å—å –æ—Ç–º–µ–Ω–µ–Ω–∞", reply_markup=Keyboard.v1())


# –ö–æ–Ω–µ—Ü —Å–∫—Ä–∏–ø—Ç–∞
if __name__ == '__main__':
    bot.skip_pending = True
    bot.polling(none_stop=True)
    bot.infinity_polling()