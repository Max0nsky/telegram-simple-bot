import telebot
import params

from telebot import types


token = params.getToken()
bot = telebot.TeleBot(token)
storage = {}


@bot.message_handler(commands=['start'])
def start_message(message):

    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button1 = types.KeyboardButton("–ó–∞–ø–∏—Å—å ‚úèÔ∏è")
    button2 = types.KeyboardButton("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è ‚ùì")
    keyboard.add(button1)
    keyboard.add(button2)

    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç, {0.first_name}! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å ‚úåÔ∏è".format(
        message.from_user), reply_markup=keyboard)


def init_storage(user_id):
    storage[user_id] = dict(user_name=None, user_age=None)


def set_store_data(user_id, key, value):
    storage[user_id][key] = dict(value=value)


def get_element_storage(user_id, key):
    return storage[user_id][key].get('value')


@bot.message_handler()
def start(message):
    init_storage(message.from_user.id)

    list_check_record = ['–ó–∞–ø–∏—Å—å', '–∑–∞–ø–∏—Å—å', '–ó–∞–ø–∏—Å—å ‚úèÔ∏è']
    list_check_info = ['–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', '–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è ‚ùì']

    if message.text in list_check_record:
        making_user_record(message)
    elif message.text in list_check_info:
        bot.send_message(
            message.chat.id, "–ö–∞–∫–∞—è-—Ç–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è...", parse_mode='html')
    else:
        bot.reply_to(message, "–ù–µ –ø–æ–Ω–∏–º–∞—é, –≤—ã –æ —á—ë–º? ü§∑‚Äç‚ôÇÔ∏è")
        bot.send_message(
            message.chat.id, "–í–≤–µ–¥–∏—Ç–µ '–ó–∞–ø–∏—Å—å' –¥–ª—è –∑–∞–ø–∏—Å–∏", parse_mode='html')


def making_user_record(message):
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:", parse_mode='html')
    bot.register_next_step_handler(message, plus_name)


def plus_name(message):
    user_name = message.text
    set_store_data(message.from_user.id, "user_name", user_name)
    bot.reply_to(message, "–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç:")
    bot.register_next_step_handler(message, plus_age)


def plus_age(message):
    user_age = message.text

    if not user_age.isdigit():
        bot.reply_to(message, '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞. –¢—É—Ç —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫ üßê')
        bot.register_next_step_handler(message, plus_age)
        return

    set_store_data(message.from_user.id, "user_age", user_age)
    make_answer(message)


def make_answer(message):
    bot.send_message(
        message.chat.id, "–ü–µ—Ä–µ–¥–∞—ë–º –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö", parse_mode='html')

    user_name = get_element_storage(message.from_user.id, "user_name")
    user_age = get_element_storage(message.from_user.id, "user_age")

    bot.send_message(
        message.chat.id, f"–ë–æ–ª—å—à–æ–µ —Å–ø–∞—Å–∏–±–æ!üëç \n–í–∞—à–µ –∏–º—è: {user_name} \n–í–∞—à –≤–æ–∑—Ä–∞—Å—Ç: {user_age} \n")


if __name__ == '__main__':
    bot.skip_pending = True
    bot.polling(none_stop=True)
    bot.infinity_polling()
